//Задание 1
'use strict';
let a = 1, b = 1, c, d;

/*
пример 1
переменная а=1
- сначала программа выполнит префиксиный инкримент переменной а на 1
- префиксная форма возвращает новое значение a и программа запишет его в переменную a
- теперь а = 2
- далее программа выполнит присваивание значения переменной а в переменную с
- итог: 2
*/
c = ++a;
console.log('Пример 1: ' + c); // ответ: 2

/*
пример 2
переменные d = undefined , b = 1
- сначала программа выполнит постфиксный инкримент переменной b на 1
- постфиксная форма возвращает старое значение и b будет равно 1 (при этом сама переменная в программе будет увеличина на 1 и b = 2)
- теперь b = 1  
- далее программа выполнит присваивание значения переменной b в переменную d
- итог: 1
*/
d = b++;
console.log('Пример 2: ' + d); //ответ: 1

/*
пример 3
  а = 2
- сначала программа выполнит префиксиный инкримент переменной а на 1
- префиксная форма возвращает новое значение a и программа запишет его в переменную a
- теперь а = 3
- далее программа выполнит сложение 2 + 3
- итог с = 5
*/
c = 2 + ++a;
console.log('Пример 3: ' + c); //ответ: 5

/*
пример 4
 b = 2
 - сначала программа выполнит постфиксный инкримент переменной b на 1
 - постфиксная форма возвращает старое значение и b будет равно 2 (при этом сама переменная в программе будет увеличина на 1 и b = 3)
 - далее программа выполнит сложение 2 + 2
 - итог d = 4
*/
d = 2 + b++;
console.log('Пример 4: ' + d); //ответ: 4

//Пример 5
//так как ранее в программе переменная а была равна 3, все остается без изменений
console.log('Без изменений ' + a); //3
//так как ранее переменная была увеличина на 1, то при повторном ее вызове, вернется новое значение.
console.log('При повторном вызове b вернется ее новое значение ' + b); //3



//Задание 2

/*
n = 2 , x = 1 + (a *= 2)
- так как у скобок наивысший приоритет, сначала программа выполнит умножение (a * 2) и полученный результат присвоит в переменную а 
  а *= 2, так же будет равно как а = а * 2
- теперть а = 4
- далее программа выполнит сложение 1 + a
- полученный результат сложения 5 программа присвоит в переменную x
- итог: x = 5

*/
let n = 2;
let x = 1 + (n *= 2);
console.log ('Задание 2: ' + x);


//Задание 3

/*
int f , g
*/
let f = parseInt(prompt('Введите первое любое отрицательное или положительное число'));
let g = parseInt(prompt('Введите второе любое отрицательное или положительное число'));
  if (f >= 0 && g >= 0) {
    console.log ('Задание 3: ' + (f - g))
  }
  if (f < 0 && g < 0) {
    console.log ('Задание 3: ' + f * g)
  } else {
    console.log('Задание 3: ' + (f + g))
  }

//Задание 4
/**
 * Функция сложения 
 * @param {number} z  
 * @param {number} y 
 */
 function calculateAddition(z, y) {
  return z + y;
 }
 /**
 * Функция разности
 * @param {number} z  
 * @param {number} y 
 */
 function calculateDifference(z, y) {
  return z - y;
 }
/**
 * Функция деления 
 * @param {number} z  
 * @param {number} y 
 */
 function calculateDivision(z, y) {
  return z / y;
 }
/**
 * Функция произведения 
 * @param {number} z  
 * @param {number} y 
 */
 function calculateMultiplication(z, y) {
  return z * y;
 }
/**
 * Функция, в зависимости от operation, вызывает функции арифметических операций
 * @param {number} arg1  
 * @param {number} arg2
 * @param {string} operation
 */
 function mathOperation(arg1, arg2, operation) {
  switch (operation) {

    case 'сложение':
     return calculateAddition(arg1, arg2);

    case 'разность':
     return calculateDifference(arg1, arg2);

    case 'деление':
     return calculateDivision(arg1, arg2);

    case 'произведение':
     return calculateMultiplication(arg1, arg2);
  }
 }

 let resultOperation = mathOperation(10, 5, 'деление');
 console.log ('Задание 4: ' + 'Результат операции ' + resultOperation);